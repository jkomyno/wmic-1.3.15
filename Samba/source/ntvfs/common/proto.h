#ifndef __NTVFS_COMMON_PROTO_H__
#define __NTVFS_COMMON_PROTO_H__

#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2) PRINTF_ATTRIBUTE(a1, a2)
/* This file was automatically generated by mkproto.pl. DO NOT EDIT */

#ifndef _PUBLIC_
#define _PUBLIC_
#endif


/* The following definitions come from ntvfs/common/init.c  */

_PUBLIC_ NTSTATUS ntvfs_common_init(void);

/* The following definitions come from ntvfs/common/brlock.c  */

struct brl_context *brl_init(TALLOC_CTX *mem_ctx, uint32_t server, 
			     struct messaging_context *messaging_ctx);
struct brl_handle *brl_create_handle(TALLOC_CTX *mem_ctx, struct ntvfs_handle *ntvfs, DATA_BLOB *file_key);
NTSTATUS brl_lock(struct brl_context *brl,
		  struct brl_handle *brlh,
		  uint16_t smbpid,
		  uint64_t start, uint64_t size, 
		  enum brl_type lock_type,
		  void *notify_ptr);
NTSTATUS brl_unlock(struct brl_context *brl,
		    struct brl_handle *brlh, 
		    uint16_t smbpid,
		    uint64_t start, uint64_t size);
NTSTATUS brl_remove_pending(struct brl_context *brl,
			    struct brl_handle *brlh, 
			    void *notify_ptr);
NTSTATUS brl_locktest(struct brl_context *brl,
		      struct brl_handle *brlh,
		      uint16_t smbpid, 
		      uint64_t start, uint64_t size, 
		      enum brl_type lock_type);
NTSTATUS brl_close(struct brl_context *brl,
		   struct brl_handle *brlh);

/* The following definitions come from ntvfs/common/opendb.c  */

_PUBLIC_ struct odb_context *odb_init(TALLOC_CTX *mem_ctx, 
				      struct ntvfs_context *ntvfs_ctx);
_PUBLIC_ struct odb_lock *odb_lock(TALLOC_CTX *mem_ctx,
				   struct odb_context *odb, DATA_BLOB *file_key);
_PUBLIC_ NTSTATUS odb_open_file(struct odb_lock *lck, void *file_handle,
				uint32_t stream_id, uint32_t share_access, 
				uint32_t access_mask, BOOL delete_on_close,
				const char *path, 
				uint32_t oplock_level, uint32_t *oplock_granted);
_PUBLIC_ NTSTATUS odb_open_file_pending(struct odb_lock *lck, void *private);
_PUBLIC_ NTSTATUS odb_close_file(struct odb_lock *lck, void *file_handle);
_PUBLIC_ NTSTATUS odb_remove_pending(struct odb_lock *lck, void *private);
_PUBLIC_ NTSTATUS odb_rename(struct odb_lock *lck, const char *path);
_PUBLIC_ NTSTATUS odb_set_delete_on_close(struct odb_lock *lck, BOOL del_on_close);
_PUBLIC_ NTSTATUS odb_get_delete_on_close(struct odb_context *odb, 
					  DATA_BLOB *key, BOOL *del_on_close, 
					  int *open_count, char **path);
_PUBLIC_ NTSTATUS odb_can_open(struct odb_lock *lck,
			       uint32_t share_access, uint32_t create_options, 
			       uint32_t access_mask);

/* The following definitions come from ntvfs/common/notify.c  */

struct notify_context *notify_init(TALLOC_CTX *mem_ctx, uint32_t server, 
				   struct messaging_context *messaging_ctx,
				   struct event_context *ev,
				   struct share_config *scfg);
NTSTATUS notify_add(struct notify_context *notify, struct notify_entry *e0,
		    void (*callback)(void *, const struct notify_event *), 
		    void *private);
NTSTATUS notify_remove(struct notify_context *notify, void *private);
void notify_trigger(struct notify_context *notify,
		    uint32_t action, uint32_t filter, const char *path);
#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2)

#endif /* __NTVFS_COMMON_PROTO_H__ */

