/* This file is autogenerated by pidl. DO NOT EDIT */
%module wzcsvc

%{
#include "includes.h"
#include "auth/credentials/credentials.h"
#include "librpc/gen_ndr/ndr_wzcsvc_c.h"
#include "librpc/gen_ndr/wzcsvc.h"
%}
%import "samba.i"

%inline {
void ntstatus_exception(NTSTATUS status)
{
	/* FIXME */
}
}



%inline {
struct wzcsvc { struct dcerpc_pipe *pipe; };
}

%extend wzcsvc {
	wzcsvc (const char *binding, struct cli_credentials *cred = NULL, TALLOC_CTX *mem_ctx = NULL, struct event_context *event = NULL)
	{
		struct wzcsvc *ret = talloc(mem_ctx, struct wzcsvc);
		NTSTATUS status;
		
		status = dcerpc_pipe_connect(mem_ctx, &ret->pipe, binding, &dcerpc_table_wzcsvc, cred, event);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return NULL;
		}
		
		return ret;
	}
	
	~wzcsvc() {
		talloc_free(self);
	}
	
	/* wzcsvc_EnumInterfaces */
	void EnumInterfaces(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_EnumInterfaces r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_EnumInterfaces(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_QueryInterface */
	void QueryInterface(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_QueryInterface r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_QueryInterface(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_SetInterface */
	void SetInterface(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_SetInterface r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_SetInterface(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_RefreshInterface */
	void RefreshInterface(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_RefreshInterface r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_RefreshInterface(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_QueryContext */
	void QueryContext(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_QueryContext r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_QueryContext(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_SetContext */
	void SetContext(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_SetContext r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_SetContext(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_EapolUIResponse */
	void EapolUIResponse(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_EapolUIResponse r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_EapolUIResponse(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_EapolGetCustomAuthData */
	void EapolGetCustomAuthData(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_EapolGetCustomAuthData r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_EapolGetCustomAuthData(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_EapolSetCustomAuthData */
	void EapolSetCustomAuthData(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_EapolSetCustomAuthData r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_EapolSetCustomAuthData(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_EapolGetInterfaceParams */
	void EapolGetInterfaceParams(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_EapolGetInterfaceParams r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_EapolGetInterfaceParams(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_EapolSetInterfaceParams */
	void EapolSetInterfaceParams(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_EapolSetInterfaceParams r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_EapolSetInterfaceParams(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_EapolReAuthenticateInterface */
	void EapolReAuthenticateInterface(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_EapolReAuthenticateInterface r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_EapolReAuthenticateInterface(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_EapolQueryInterfaceState */
	void EapolQueryInterfaceState(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_EapolQueryInterfaceState r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_EapolQueryInterfaceState(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_OpenWZCDbLogSession */
	void OpenWZCDbLogSession(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_OpenWZCDbLogSession r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_OpenWZCDbLogSession(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_CloseWZCDbLogSession */
	void CloseWZCDbLogSession(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_CloseWZCDbLogSession r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_CloseWZCDbLogSession(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_EnumWZCDbLogRecords */
	void EnumWZCDbLogRecords(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_EnumWZCDbLogRecords r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_EnumWZCDbLogRecords(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_FlushWZCdbLog */
	void FlushWZCdbLog(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_FlushWZCdbLog r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_FlushWZCdbLog(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
	/* wzcsvc_GetWZCDbLogRecord */
	void GetWZCDbLogRecord(TALLOC_CTX *mem_ctx = NULL)
	{
		struct wzcsvc_GetWZCDbLogRecord r;
		NTSTATUS status;
		
		/* Fill r structure */
		
		status = dcerpc_wzcsvc_GetWZCDbLogRecord(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
};


