/* This file is autogenerated by pidl. DO NOT EDIT */
%module winsrepl

%{
#include "includes.h"
#include "auth/credentials/credentials.h"
#include "librpc/gen_ndr/ndr_winsrepl_c.h"
#include "librpc/gen_ndr/winsrepl.h"
%}
%import "samba.i"

%inline {
void ntstatus_exception(NTSTATUS status)
{
	/* FIXME */
}
}

%types(wrepl_packet);
%types(wrepl_wrap);


%inline {
struct wrepl { struct dcerpc_pipe *pipe; };
}

%extend wrepl {
	wrepl (const char *binding, struct cli_credentials *cred = NULL, TALLOC_CTX *mem_ctx = NULL, struct event_context *event = NULL)
	{
		struct wrepl *ret = talloc(mem_ctx, struct wrepl);
		NTSTATUS status;
		
		status = dcerpc_pipe_connect(mem_ctx, &ret->pipe, binding, &dcerpc_table_wrepl, cred, event);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return NULL;
		}
		
		return ret;
	}
	
	~wrepl() {
		talloc_free(self);
	}
	
	/* decode_winsrepl */
	void decode_winsrepl(struct wrepl_wrap p, TALLOC_CTX *mem_ctx = NULL)
	{
		struct decode_winsrepl r;
		NTSTATUS status;
		
		/* Fill r structure */
		r.in.p = p;
		
		status = dcerpc_decode_winsrepl(self->pipe, mem_ctx, &r);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return;
		}
		
		/* Set out arguments */
	}
	
};

/* wrepl_ip */
/* wrepl_address_list */
/* wrepl_addresses */
/* wrepl_name_type */
/* wrepl_name_state */
/* wrepl_name_node */
/* wrepl_flags */
/* wrepl_group_flag */
/* wrepl_wins_name */
/* wrepl_send_reply */
/* wrepl_wins_owner */
/* wrepl_table */
/* wrepl_replication_cmd */
/* wrepl_replication_info */
/* wrepl_replication */
/* wrepl_start */
/* wrepl_stop */
/* wrepl_mess_type */
/* wrepl_message */
/* wrepl_packet */
/* wrepl_wrap */

