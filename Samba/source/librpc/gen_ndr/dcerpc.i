/* This file is autogenerated by pidl. DO NOT EDIT */
%module dcerpc

%{
#include "includes.h"
#include "auth/credentials/credentials.h"
#include "librpc/gen_ndr/ndr_dcerpc_c.h"
#include "librpc/gen_ndr/dcerpc.h"
%}
%import "samba.i"

%inline {
void ntstatus_exception(NTSTATUS status)
{
	/* FIXME */
}
}

%types(dcerpc_syntax_id);
%types(dcerpc_auth);
%types(dcerpc_auth3);
%types(dcerpc_orphaned);
%types(dcerpc_co_cancel);
%types(dcerpc_cl_cancel);
%types(dcerpc_cancel_ack);
%types(dcerpc_fack);
%types(dcerpc_ack);
%types(dcerpc_ping);
%types(dcerpc_shutdown);
%types(dcerpc_working);
%types(ncacn_packet);
%types(ncadg_packet);


%inline {
struct dcerpc { struct dcerpc_pipe *pipe; };
}

%extend dcerpc {
	dcerpc (const char *binding, struct cli_credentials *cred = NULL, TALLOC_CTX *mem_ctx = NULL, struct event_context *event = NULL)
	{
		struct dcerpc *ret = talloc(mem_ctx, struct dcerpc);
		NTSTATUS status;
		
		status = dcerpc_pipe_connect(mem_ctx, &ret->pipe, binding, &dcerpc_table_dcerpc, cred, event);
		if (NT_STATUS_IS_ERR(status)) {
			ntstatus_exception(status);
			return NULL;
		}
		
		return ret;
	}
	
	~dcerpc() {
		talloc_free(self);
	}
	
};

/* dcerpc_syntax_id */
/* dcerpc_ctx_list */
/* dcerpc_bind */
/* dcerpc_empty */
/* dcerpc_object */
/* dcerpc_request */
/* dcerpc_ack_ctx */
/* dcerpc_bind_ack */
/* dcerpc_bind_nak_versions */
/* dcerpc_bind_nak_versions_ctr */
/* dcerpc_bind_nak */
/* dcerpc_response */
/* dcerpc_fault */
/* dcerpc_auth */
/* dcerpc_auth3 */
/* dcerpc_orphaned */
/* dcerpc_co_cancel */
/* dcerpc_cl_cancel */
/* dcerpc_cancel_ack */
/* dcerpc_fack */
/* dcerpc_ack */
/* dcerpc_ping */
/* dcerpc_shutdown */
/* dcerpc_working */
/* dcerpc_pkt_type */
/* dcerpc_payload */
/* ncacn_packet */
/* ncadg_packet */

